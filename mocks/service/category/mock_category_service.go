// Code generated by MockGen. DO NOT EDIT.
// Source: service/category/category_service_interface.go
//
// Generated by this command:
//
//	mockgen -source service/category/category_service_interface.go -destination mocks/service/category/mock_category_service.go
//
// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	model "github.com/varomnrg/money-tracker/model"
	gomock "go.uber.org/mock/gomock"
)

// MockICategoryService is a mock of ICategoryService interface.
type MockICategoryService struct {
	ctrl     *gomock.Controller
	recorder *MockICategoryServiceMockRecorder
}

// MockICategoryServiceMockRecorder is the mock recorder for MockICategoryService.
type MockICategoryServiceMockRecorder struct {
	mock *MockICategoryService
}

// NewMockICategoryService creates a new mock instance.
func NewMockICategoryService(ctrl *gomock.Controller) *MockICategoryService {
	mock := &MockICategoryService{ctrl: ctrl}
	mock.recorder = &MockICategoryServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICategoryService) EXPECT() *MockICategoryServiceMockRecorder {
	return m.recorder
}

// CreateCategory mocks base method.
func (m *MockICategoryService) CreateCategory(userID string, category model.CategoryRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCategory", userID, category)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateCategory indicates an expected call of CreateCategory.
func (mr *MockICategoryServiceMockRecorder) CreateCategory(userID, category any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCategory", reflect.TypeOf((*MockICategoryService)(nil).CreateCategory), userID, category)
}

// DeleteCategory mocks base method.
func (m *MockICategoryService) DeleteCategory(id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCategory", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCategory indicates an expected call of DeleteCategory.
func (mr *MockICategoryServiceMockRecorder) DeleteCategory(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCategory", reflect.TypeOf((*MockICategoryService)(nil).DeleteCategory), id)
}

// GetCategories mocks base method.
func (m *MockICategoryService) GetCategories() ([]model.Category, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCategories")
	ret0, _ := ret[0].([]model.Category)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCategories indicates an expected call of GetCategories.
func (mr *MockICategoryServiceMockRecorder) GetCategories() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCategories", reflect.TypeOf((*MockICategoryService)(nil).GetCategories))
}

// GetCategory mocks base method.
func (m *MockICategoryService) GetCategory(id string) (model.Category, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCategory", id)
	ret0, _ := ret[0].(model.Category)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCategory indicates an expected call of GetCategory.
func (mr *MockICategoryServiceMockRecorder) GetCategory(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCategory", reflect.TypeOf((*MockICategoryService)(nil).GetCategory), id)
}

// GetUserCategories mocks base method.
func (m *MockICategoryService) GetUserCategories(userID string) ([]model.Category, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserCategories", userID)
	ret0, _ := ret[0].([]model.Category)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserCategories indicates an expected call of GetUserCategories.
func (mr *MockICategoryServiceMockRecorder) GetUserCategories(userID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserCategories", reflect.TypeOf((*MockICategoryService)(nil).GetUserCategories), userID)
}
